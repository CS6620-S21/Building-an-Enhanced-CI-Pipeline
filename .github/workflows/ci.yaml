name: Continuous Integration Pipeline
'on': pull_request
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: gke-testing-cluster
  GKE_ZONE: us-central1
  DEPLOYMENT_NAME: gke-test
  IMAGE: static-site
jobs:
  formatting-check:
    name: Formatting Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: run YAPF to test if python code is correctly formatted
      uses: AlexanderMelde/yapf-action@master
      with:
        args: --verbose

  pyTest:
    name: Unit Test - PyTest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setting up Python 3.6
        uses: actions/setup-python@v2
        with:
          python-version: 3.6
      - name: Installing Python dependencies from requirements.txt
        uses: py-actions/py-dependency-install@v2
        with:
          path: ./requirements.txt
      - name: Testing with PyTest
        run: >
          python3 -m pytest -rsA tests/ -vv --cov-fail-under=99 -W
          ignore::DeprecationWarning

  setup-build-publish-deploy:
    if: ${{ always() }}
    needs: [formatting-check, pyTest]
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@master
      with:
        version: '331.0.0'
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication

    - run: |-
        gcloud --quiet auth configure-docker
    # - run: |-
    #     gcloud container clusters create-auto "$GKE_CLUSTER" --region "$GKE_ZONE"
    - uses: google-github-actions/get-gke-credentials@main
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}
    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .
    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"
    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize
    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide

  run-integration-tests:
    needs: wait
    name: run the integration tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setting up Python 3.6
        uses: actions/setup-python@v2
        with:
          python-version: 3.6
      - name: Installing Python dependencies from requirements.txt
        uses: py-actions/py-dependency-install@v2
        with:
          path: ./selenium_test/requirements.txt
      - name: setup-firefox
        uses: browser-actions/setup-firefox@latest
        # run: firefox --version
      - name: setup-geckodriver
        uses: browser-actions/setup-geckodriver@latest
        # run: geckodriver --version
      - name: Testing with selenium
        run: >
          python3 selenium_test.py
        working-directory: ./selenium_test

  run-load-tests:
    needs: wait
    name: run the load tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run Load Test
        uses: apardo04/locust-github-action@master
        with:
          LOCUSTFILE: "./load_test/locustfile.py"
          URL:  "http://34.102.157.148/"
          USERS: "500"
          RATE: "10"
          RUNTIME: "30s"
          
  delete-service:
    if: ${{ always() }}
    needs: [run-load-tests]
    name: delete-cluster-environment
    runs-on: ubuntu-latest
    steps:
    - uses: google-github-actions/setup-gcloud@master
      with:
        version: '331.0.0'
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}
    - uses: google-github-actions/get-gke-credentials@main
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}
    - name: delete-service-gke
      run : |-
          kubectl delete deployment gke-test
          kubectl delete ingress gke-test-service
          kubectl delete service gke-test-service-backend
        

